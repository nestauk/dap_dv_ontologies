import { promises as fs } from 'fs';
import { basename } from 'path';

import { querySparql } from 'queries/fetch.mjs';

export const readQueryFiles = files =>
	Promise.all(files.map((file) => fs.readFile(file, { encoding: 'utf-8' })));

export const stripComments = query =>
	query
		.split('\n')
		.filter((line) => !line.trim().startsWith('#'))
		.join('\n');

export const concatenateQueries = queries =>
	queries
		.map(stripComments)
		.map((query) => query.trim().replace(/\n/gu, ' '))
		.join('\n')
		.trim();

export const uploadQueriesFromFile = async function (path) {
	const file = basename(path);
	const graph = `<${file}>`;
	const triples = await fs.readFile(file, { encoding: 'utf-8' });
	const query = `INSERT DATA { GRAPH ${graph} { ${triples} } }`;
	querySparql('virtuoso', query);
};
