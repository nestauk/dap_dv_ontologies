import { promises as fs } from 'fs'

import dayjs from 'dayjs'
import  customParseFormat from 'dayjs/plugin/customParseFormat.js'
dayjs.extend(customParseFormat)

export const mostRecentBenchmarkFile = async function(path) {

    const files = (await fs.readdir(path)).filter((file) =>
		file.startsWith("results")
	);

    if (files.length === 0)
        throw new Error(`No result files can be found at ${path}`)

    // results are saved like so: results_{YYYY}-{MM}-{DD}_{HH}-{mm}.nt
    const parseDate = (file) => {
        const t = file.slice(0, -7).split('_').slice(1).join(' ')
        return dayjs(t, 'YYYY-MM-DD HH-mm');
    }
    const fileDates = files.map(file => { 
        return {file: file, date: parseDate(file)}
    }).sort((file1, file2) => file2.date - file1.date);

    const mostRecentFile = fileDates[0].file
    return mostRecentFile
}